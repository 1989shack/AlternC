<?php
/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-03-13 at 15:55:59.
 */
class m_memTest extends AlterncTest
{

    protected $login                = "phpunit";
    protected $pass                 = "phpunit";


    /**
     * @var m_mem
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        parent::setUp();
        $this->object = new m_mem;
    }

    /**
     * @return PHPUnit_Extensions_Database_DataSet_IDataSet
     */
    public function getDataSet() {

        $dataset_file           = "membres.yml";
//        $list = array(
//            "testPurge" => "actions-purgeable.yml",
//            "testGet_action" => "actions-purgeable.yml",
//            "testGet_old" => "actions-purgeable.yml",
//            "testFinish" => "actions-purgeable.yml",
//            "testReset_job" => "actions-began.yml",
//            "testGet_job" => "actions-ready.yml",
//            "testCancel" => "actions-purgeable.yml",
//            "default" => "actions-purgeable.yml"
//        );
//        if (isset($list[$this->getName()])) {
//            $dataset_file = $list[$this->getName()];
//        } else {
//            $dataset_file = "actions-empty.yml";
//        }
        return parent::loadDataSet($dataset_file);
    }

    
    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        parent::tearDown();
    }

    /**
     * @covers m_mem::alternc_password_policy
     */
    public function testAlternc_password_policy()
    {
       
        $result = $this->object->alternc_password_policy();
        $this->assertInternalType("array",$result);
    }

    /**
     * @covers m_mem::hook_menu
     */
    public function testHook_menu()
    {
        $result = $this->object->hook_menu();
        $this->assertInternalType("array",$result);
    }

    /**
     * @covers m_mem::checkright
     * @todo   Implement testCheckright().
     */
    public function testCheckright()
    {
        $result = $this->object->checkright();
        $this->assertFalse($result);
    }

    /**
     * @covers m_mem::login
     */
    public function testLogin()
    {
        $result = $this->object->login($this->login,  $this->pass);
        $this->assertTrue($result);
    }

    /**
     * @covers m_mem::login
     */
    public function testWrongLogin()
    {
        $result = $this->object->login($this->login, "null");
        $this->assertFalse($result);
    }

    /**
     * @covers m_mem::login
     */
    public function testWrongIPLogin()
    {
        $result = $this->object->login($this->login, $this->pass, true);
        $this->assertFalse($result);
    }

    /**
     * @covers m_mem::setid
     * @todo   Implement testSetid().
     */
    public function testSetid()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers m_mem::resetlast
     * @todo   Implement testResetlast().
     */
    public function testResetlast()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers m_mem::authip_token
     * @todo   Implement testAuthip_token().
     */
    public function testAuthip_token()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers m_mem::authip_tokencheck
     * @todo   Implement testAuthip_tokencheck().
     */
    public function testAuthip_tokencheck()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers m_mem::checkid
     * @todo   Implement testCheckid().
     */
    public function testCheckid()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers m_mem::su
     * @todo   Implement testSu().
     */
    public function testSu()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers m_mem::unsu
     * @todo   Implement testUnsu().
     */
    public function testUnsu()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers m_mem::del_session
     * @todo   Implement testDel_session().
     */
    public function testDel_session()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers m_mem::passwd
     * @todo   Implement testPasswd().
     */
    public function testPasswd()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers m_mem::adminpref
     * @todo   Implement testAdminpref().
     */
    public function testAdminpref()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers m_mem::send_pass
     * @todo   Implement testSend_pass().
     */
    public function testSend_pass()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers m_mem::ChangeMail1
     * @todo   Implement testChangeMail1().
     */
    public function testChangeMail1()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers m_mem::ChangeMail2
     * @todo   Implement testChangeMail2().
     */
    public function testChangeMail2()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers m_mem::set_help_param
     * @todo   Implement testSet_help_param().
     */
    public function testSet_help_param()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers m_mem::get_help_param
     * @todo   Implement testGet_help_param().
     */
    public function testGet_help_param()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers m_mem::show_help
     * @todo   Implement testShow_help().
     */
    public function testShow_help()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers m_mem::get_creator_by_uid
     * @todo   Implement testGet_creator_by_uid().
     */
    public function testGet_creator_by_uid()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers m_mem::alternc_export_conf
     * @todo   Implement testAlternc_export_conf().
     */
    public function testAlternc_export_conf()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers m_mem::session_tempo_params_get
     * @todo   Implement testSession_tempo_params_get().
     */
    public function testSession_tempo_params_get()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers m_mem::session_tempo_params_set
     * @todo   Implement testSession_tempo_params_set().
     */
    public function testSession_tempo_params_set()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }
}
